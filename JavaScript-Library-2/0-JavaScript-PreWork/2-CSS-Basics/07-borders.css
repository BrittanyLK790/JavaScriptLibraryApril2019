/*Borders Setup 1*/

/*As you can see if we use all three properties, we're using three lines of css. Fortunately there is a shorthand way of using border and its properties. Let's look at the comment at the top of our css again. Notice how we can just do border: 5px solid red, instead of border-width: 5px, border-style: solid, and border-color:red.*/

/*Border shorthand looks like this:

p{
    border: 5px solid red;
}

The order is: border-width border-style(required)
border-color

*/

body{
    background-color: lightblue;
}

.wrapper{
    margin: 5px;
}

h1{
    text-align: center;
}

#title-p{
    text-align: center;
}

/*border styles setup 2*/
.border-style li{
    margin: 5px;
}

.border-style li:nth-child(1){
    border-style: dotted;
}

.border-style li:nth-child(2){
    border-style: dashed;
}

.border-style li:nth-child(3){
    border-style: solid;
}

.border-style li:nth-child(4){
    border-style: double;
}

.border-style li:nth-child(5){
    border-style: groove
}

.border-style li:nth-child(6){
    border-style: ridge;
}

.border-style li:nth-child(7){
    border-style: inset;
}

.border-style li:nth-child(8){
    border-style: none;
}

.border-style li:nth-child(9){
    border-style: hidden;
}

.border-style li:nth-child(10){
    border-style: dotted dashed solid double;
}

/*Let's talk about border-style li:nth-child(10), 
It is what you call a psuedo-class.

selector:pseudo-class {
    property:value;
}*/

/* PSUEDO CLASSES, allows us to more easily style things. A psuedo-class is used to define a special state of an elements. Pesudo-classes let you apply a style to an element not only in relation to the content of the document tree, but also in relation tp external factors like the history of the navigator (:visited, for example), the status of its content (like :checked on certian form elements), or the position of the mouse (like :hover, which lets you know if the mouse is over an element or not).*/

/*NTH-CHILD, is a psuedo-class that matches one or more elements based on their position amoung a group of siblings.
So here we're using the nth-child psuedo class to identify each list item and style them independently. Check out all of the cool border styles, and how using psuedo-classes we can style them all specifically without needing to assign an ID to each one.*/

/*Border widths setup 3*/

/*Important Note, border-width will not work unless you have border-style set.*/

.border-width p{
    border-style: solid;
    border-width: 5px;
}

#four-widths{
    border-style: solid;
    border-width: 2px 10px 4px 20px;
}
/*The order of the widths, go in this order, always goes: top-right-bottom-left. Try changing the widths of each side to see the changes.*/

/*Border colors setup 4*/
.border-color li:nth-child(1){
    margin:5px;
    border-style: solid;
    border-color: blue;
}

.border-color li:nth-child(2){
    margin: 5px;
    border-style: solid;
    border-color: #eee;
}

.border-color li:nth-child(3){
    margin: 5px;
    border-style: solid;
    border-color: rgb(100,0,100);
}

.border-color li:nth-child(4){
    margin: 5px;
    border-style: solid;
    border-color: transparent;
}
/*Notice here, we're using the psuedo class nth-child again! This time you should be able to see the color differences between borders. */
